{"version":3,"sources":["App.js","serviceWorker.js","index.js","logo.svg"],"names":["App","className","class","href","rel","id","viewbox","x1","x2","y1","y2","offset","stop-color","x","y","width","height","patternUnits","d","mask","fill","attributeName","begin","dur","type","from","to","repeatCount","text-anchor","font-size","fill-opacity","elevation","Elevation","TWO","pt-grid-size","label","labelFor","labelInfo","placeholder","disabled","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"uMAqHeA,MA5Gf,WACE,OACE,yBAAKC,UAAU,OACX,wBAAIC,MAAM,cACV,4BACM,uBACED,UAAU,WACVE,KAAK,SACLC,IAAI,uBAHN,SAON,4BACM,uBACEH,UAAU,WACVE,KAAK,SACLC,IAAI,uBAHN,UAON,4BACM,uBACEH,UAAU,WACVE,KAAK,WACLC,IAAI,uBAHN,aAQR,4BAAQC,GAAG,QAAQJ,UAAU,cAC7B,yBAAKK,QAAQ,eACjB,8BACE,oCAAgBD,GAAG,WAAWE,GAAG,IAAIC,GAAG,IAAIC,GAAG,IAAIC,GAAG,KACpD,0BAAMC,OAAO,MAAMC,aAAW,YAC9B,0BAAMD,OAAO,MAAMC,aAAW,aAEhC,6BAASP,GAAG,OAAOQ,EAAE,IAAIC,EAAE,KAAKC,MAAM,MAAMC,OAAO,MAAMC,aAAa,kBACpE,0BAAMZ,GAAG,WAAWa,EAAE,gHAAgHC,KAAK,aAAaC,KAAK,kBAE3J,sCACIC,cAAc,YACdC,MAAM,KACNC,IAAI,OACJC,KAAK,YACLC,KAAK,MACLC,GAAG,OACHC,YAAY,kBAItB,0BAAMC,cAAY,SAASf,EAAE,MAAMC,EAAE,MAAMe,YAAU,MAAMT,KAAK,aAAcU,eAAa,OAA3F,QACA,0BAAMF,cAAY,SAASf,EAAE,MAAMC,EAAE,MAAMe,YAAU,MAAMT,KAAK,iBAAiBU,eAAa,OAA9F,UAGI,yBAAKzB,GAAG,QAAQJ,UAAU,aACxB,6BACE,qCACA,yBAAKA,UAAU,kBACb,kBAAC,IAAD,CAAM8B,UAAWC,IAAUC,IAAKhC,UAAU,WACxC,4BAAI,uBAAGE,KAAK,KAAR,eACJ,+EACA,wBAAID,MAAM,YACR,oDACA,uCACA,0CACA,4CAGJ,kBAAC,IAAD,CAAM6B,UAAWC,IAAUC,IAAKhC,UAAU,WACxC,4BAAI,uBAAGE,KAAK,KAAR,cACJ,+EACA,wBAAID,MAAM,YACR,4CACA,6CAMV,yBAAKD,UAAU,eACb,yBAAKI,GAAG,WACR,uCACE,8DACA,kBAAC,IAAD,CAAW6B,gBAAA,EACPC,MAAM,OACNC,SAAS,aACTC,UAAU,cAEV,kBAAC,IAAD,CAAYhC,GAAG,aAAaiC,YAAY,OAAOC,UAAQ,KAE3D,kBAAC,IAAD,CACIJ,MAAM,QACNE,UAAU,cAEV,kBAAC,IAAD,CAAYhC,GAAG,aAAaiC,YAAY,QAAQC,UAAQ,KAE5D,kBAAC,IAAD,CACIJ,MAAM,WACNE,UAAU,cACV,kBAAC,IAAD,CAAUpC,UAAU,WAAWqC,YAAY,qBAAqBC,UAAQ,KAE1E,kBAAC,IAAD,CAAQtC,UAAU,aAAlB,cClGQuC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,6EErInBC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.3faa55d8.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport cors from 'cors';\nimport './App.css';\nimport \"normalize.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\nimport \"@blueprintjs/icons/lib/css/blueprint-icons.css\";\nimport { Button, Card, Elevation, FormGroup, InputGroup, TextArea } from \"@blueprintjs/core\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <ul class=\"navigation\">\n        <li>\n              <a\n                className=\"App-link\"\n                href=\"#title\"\n                rel=\"noopener noreferrer\"\n              >\n                Home\n              </a></li>\n        <li>\n              <a\n                className=\"App-link\"\n                href=\"#about\"\n                rel=\"noopener noreferrer\"\n              >\n                About\n              </a></li>\n        <li>\n              <a\n                className=\"App-link\"\n                href=\"#contact\"\n                rel=\"noopener noreferrer\"\n              >\n                Contact\n              </a></li>\n      </ul>\n      <header id=\"title\" className=\"App-header\">\n      <svg viewbox=\"0 0 200 100\">\n  <defs>\n    <linearGradient id=\"gradient\" x1=\"0\" x2=\"0\" y1=\"0\" y2=\"1\">\n      <stop offset=\"45%\" stop-color=\"#326384\"/>\n      <stop offset=\"55%\" stop-color=\"#1a5078\"/>\n    </linearGradient>\n    <pattern id=\"wave\" x=\"0\" y=\"-5\" width=\"220\" height=\"100\" patternUnits=\"userSpaceOnUse\">\n      <path id=\"wavePath\" d=\"M-40 13 Q-30 7 -20 9 T0 13 T20 9 T40 9 T60 9 T80 9 T100 9 T120 9 T150 9 T190 9 T220 9 T230 9 T250 9 V20 H-40z\" mask=\"url(#mask)\" fill=\"url(#gradient)\"> \n      {/* <path id=\"wavePath\" d=\"M-80 9 M-70 9 M-60 9 M-50 9 M-40 9 Q-30 7 -20 15 T0 15 T20 15 T40 15 T60 15 T80 15 T110 13 T130 13 T140 13 T150 9 T160 9 T170 9 T150 9 V20 H-40z\" mask=\"url(#mask)\" fill=\"url(#gradient)\">  */}\n        <animateTransform\n            attributeName=\"transform\"\n            begin=\"0s\"\n            dur=\"1.5s\"\n            type=\"translate\"\n            from=\"0,0\"\n            to=\"10,0\"\n            repeatCount=\"indefinite\" />\n      </path>\n    </pattern>\n  </defs>\n  <text text-anchor=\"middle\" x=\"150\" y=\"115\" font-size=\"105\" fill=\"url(#wave)\"  fill-opacity=\"0.9\">WASZ</text>\n  <text text-anchor=\"middle\" x=\"150\" y=\"115\" font-size=\"105\" fill=\"url(#gradient)\" fill-opacity=\"0.4\">WASZ</text>\n</svg>\n      </header>\n      <div id=\"about\" className=\"App-about\">\n        <div>\n          <h2>About</h2>\n          <div className=\"flex-container\">\n            <Card elevation={Elevation.TWO} className=\"wrapper\">\n              <h5><a href=\"#\">Consulting</a></h5>\n              <p>Plan for the future and build your dreams right.</p>\n              <ul class=\"bp3-list\">\n                <li>Business to Business</li>\n                <li>Finance</li>\n                <li>Healthcare</li>\n                <li>Technology</li>\n              </ul>\n            </Card>\n            <Card elevation={Elevation.TWO} className=\"wrapper\">\n              <h5><a href=\"#\">Execution</a></h5>\n              <p>Seeing your dreams come to fruition is our goal.</p>\n              <ul class=\"bp3-list\">\n                <li>Requirements</li>\n                <li>Analysis</li>\n              </ul>\n            </Card>\n          </div>\n        </div>\n      </div>\n      <div className=\"App-contact\">\n        <div id=\"contact\">\n        <h2>Contact</h2>\n          <div>Do you wish to speak with us?</div>\n          <FormGroup pt-grid-size\n              label=\"Name\"\n              labelFor=\"text-input\"\n              labelInfo=\"(required)\"\n          >\n              <InputGroup id=\"text-input\" placeholder=\"Name\" disabled />\n          </FormGroup>\n          <FormGroup\n              label=\"Email\"\n              labelInfo=\"(required)\"\n          >\n              <InputGroup id=\"text-input\" placeholder=\"Email\" disabled />\n          </FormGroup>\n          <FormGroup\n              label=\"Question\"\n              labelInfo=\"(required)\">\n              <TextArea className=\"bp3-fill\" placeholder=\"Reason for contact\" disabled />\n          </FormGroup>\n            <Button className=\"flex-item\">Submit</Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}